version: '3.8'

services:
  frontend:
    build:
      context: ./g-scores-fe
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - NODE_ENV=production

  backend:
    build:
      context: ./g-scores-be
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      - RAILS_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/g_scores_production
      - SECRET_KEY_BASE=add2484b5eb59314d86e40eeffb7ecc1298824830ff7ba1a2cefa9ab35833829a0e13d5990c0af8c39c05ecc271cfb19e85f27de639934c13a525d04d6efbd61
      - SSL_KEY_PATH=/app/config/ssl/server.key
      - SSL_CERT_PATH=/app/config/ssl/server.crt
    volumes:
      - ./g-scores-be/config/ssl:/app/config/ssl
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=g_scores_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: