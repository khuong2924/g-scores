version: '3.8'

services:
  frontend:
    build:
      context: ./g-scores-fe
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - VUE_APP_API_URL=http://localhost:3000
      - VUE_APP_WS_URL=ws://localhost:3000/cable

  backend:
    build:
      context: ./g-scores-be
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      - RAILS_ENV=production
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=g_scores_production
      - REDIS_URL=redis://redis:6379/1
      - SECRET_KEY_BASE=c4f5df38356866bec46b068133f25de3dfd80979d9fb7f2f8cfae4c6c1a1b930b89d9b1d28fe0d246c2ef3b2bdb4b79e6ac72a202298308b90f67805bf09f443
      - SSL_KEY_PATH=/app/config/ssl/server.key
      - SSL_CERT_PATH=/app/config/ssl/server.crt
      - ALLOWED_ORIGINS=http://localhost:80,https://localhost:443,http://localhost:3000
      - CABLE_ALLOWED_REQUEST_ORIGINS=http://localhost:80,https://localhost:443,http://localhost:3000
      - CABLE_URL=ws://localhost:3000/cable
    volumes:
      - ./g-scores-be:/app
      - ./g-scores-be/log:/app/log
      - ./tmp/csv_imports:/app/tmp/csv_imports
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  sidekiq:
    build:
      context: ./g-scores-be
      dockerfile: Dockerfile
    environment:
      - RAILS_ENV=production
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=g_scores_production
      - REDIS_URL=redis://redis:6379/1
      - SECRET_KEY_BASE=c4f5df38356866bec46b068133f25de3dfd80979d9fb7f2f8cfae4c6c1a1b930b89d9b1d28fe0d246c2ef3b2bdb4b79e6ac72a202298308b90f67805bf09f443
    volumes:
      - ./g-scores-be:/app
      - ./g-scores-be/log:/app/log
      - ./tmp/csv_imports:/app/tmp/csv_imports
    depends_on:
      - db
      - redis
    networks:
      - app-network
    command: bundle exec sidekiq -C config/sidekiq.yml

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=g_scores_production
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: